apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s
    rule_files:
      - "/etc/prometheus-rules/*.rules"
    scrape_configs:
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https
        
    #- job_name: 'kubernetes-nodes'
    #  kubernetes_sd_configs:
    #  - role: endpoints
    #    namespaces:
    #      names:
    #      - monitoring
    #  scrape_interval: 30s
    #  scrape_timeout: 30s
    #  tls_config:
    #    insecure_skip_verify: true
    #  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    #  relabel_configs:
    #  - action: keep
    #    source_labels:
    #    - __meta_kubernetes_service_label_k8s_app
    #    regex: node-exporter

    - job_name: 'kubernetes-nodes'
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):10250'
        replacement: '${1}:62661'
        target_label: __address__
        action: replace

    - job_name: pods
      honor_labels: true
      kubernetes_sd_configs:
      - role: node
      scrape_interval: 30s
      metrics_path: /metrics/cadvisor
      scheme: http
      tls_config:
        insecure_skip_verify: true
      relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):10250'
        replacement: '${1}:10255'
        target_label: __address__
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
<<<<<<< HEAD

    - job_name: kubelet
      honor_labels: true
=======
      metric_relabel_configs:
      - source_labels:
        - __name__
        regex: container_(cpu_cfs_periods_total|fs_inodes_total|fs_sector_reads_total|fs_sector_writes_total|last_seen|memory_mapped_file|spec_memory_reservation_limit_bytes|spec_memory_swap_limit_bytes|tasks_state)
        action: drop
      - source_labels:
        - container
        regex: ""
        action: drop
      - action: labeldrop
        regex: (id|name|pod_name|image)
    - job_name: kubelet
      honor_labels: true
      kubernetes_sd_configs:
      - role: node
      scrape_interval: 30s
      metrics_path: /metrics
      scheme: https
      tls_config:
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    - job_name: kube-dns
      honor_labels: false
>>>>>>> d0825b790bc306fe67aeec70bd505f6a49414ec3
      kubernetes_sd_configs:
      - role: node
      scrape_interval: 30s
      metrics_path: /metrics
      scheme: http
      tls_config:
        insecure_skip_verify: true
      relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):10250'
        replacement: '${1}:10255'
        target_label: __address__
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    
    - job_name: 'kubernetes-service-endpoints'
    
      kubernetes_sd_configs:
      - role: endpoints
    
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
    
    - job_name: 'kubernetes-services'
    
      metrics_path: /probe
      params:
        module: [http_2xx]
    
      kubernetes_sd_configs:
      - role: service
    
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
        action: keep
        regex: true
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox-exporter.example.com:9115
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_name


    - job_name: kube-state-metrics
      honor_labels: true
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - monitoring
      scrape_interval: 30s
      scrape_timeout: 30s
      tls_config:
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_service_label_k8s_app
        regex: kube-state-metrics
      - action: keep
        source_labels:
        - __meta_kubernetes_endpoint_port_name
        regex: http-main
      metric_relabel_configs:
      - source_labels:
        - __name__
        regex: (kube_daemonset_status_number_ready|kube_daemonset_status_number_unavailable|kube_deployment_status_replicas_unavailable|kube_deployment_spec_paused|kube_deployment_spec_strategy_rollingupdate_max_surge|kube_deployment_spec_strategy_rollingupdate_max_unavailable|kube_endpoint_address_available|kube_endpoint_address_not_ready|kube_node_info|kube_node_spec_unschedulable|kube_node_status_condition|kube_node_status_capacity|kube_node_status_capacity|kube_node_status_allocatable|kube_node_status_allocatable_cpu_cores|kube_node_status_allocatable_memory_bytes|kube_node_status_allocatable_pods|kube_persistentvolumeclaim_info|kube_persistentvolumeclaim_status_phase|kube_persistentvolumeclaim_resource_requests_storage_bytes|kube_persistentvolume_status_phase|kube_persistentvolume_info|kube_persistentvolume_capacity_bytes|kube_pod_info|kube_pod_status_phase|kube_pod_status_ready|kube_pod_container_info|kube_pod_container_status_waiting|kube_pod_container_status_waiting_reason|kube_pod_container_status_running|kube_pod_container_status_terminated_reason|kube_pod_container_status_last_terminated_reason|kube_pod_container_status_restarts_total|kube_pod_container_resource_limits|kube_pod_container_resource_requests_memory_bytes|kube_pod_container_resource_requests_cpu_cores|kube_service_info|kube_statefulset_status_replicas_current|kube_statefulset_status_replicas_ready)
        action: keep
#    - job_name: 'kubernetes-pods'
#    
#      kubernetes_sd_configs:
#      - role: pod
#    
#      relabel_configs:
#      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
#        action: keep
#        regex: true
#      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
#        action: replace
#        target_label: __metrics_path__
#        regex: (.+)
#      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
#        action: replace
#        regex: ([^:]+)(?::\d+)?;(\d+)
#        replacement: $1:$2
#        target_label: __address__
#      - action: labelmap
#        regex: __meta_kubernetes_pod_label_(.+)
#      - source_labels: [__meta_kubernetes_namespace]
#        action: replace
#        target_label: kubernetes_namespace
#      - source_labels: [__meta_kubernetes_pod_name]
#        action: replace
#        target_label: kubernetes_pod_name


